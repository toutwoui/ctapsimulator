package junit;

import static org.junit.Assert.*;

import org.junit.Test;

import net.stenuit.xavier.hostsimulator.protocol.Message;
import net.stenuit.xavier.hostsimulator.protocol.ParserException;
import net.stenuit.xavier.hostsimulator.protocol.ctap.CtapParser;

public class TestCtapParser {

	byte[] validMessage=new byte[]{(byte)0x00,(byte)0x01,(byte)0x02,(byte)0x03,(byte)0x04,(byte)0x05,
			(byte)0xF0,(byte)0x0B,
			(byte)0x9F,(byte)0x1C,(byte)0x04,(byte)0x12,(byte)0x34,(byte)0x56,(byte)0x78,
			(byte)0xDF,(byte)0x2E,(byte)0x01,(byte)0x91};
	String validParsedMessage="HDR:000102030405\n"+
			"F0.9F1C=12345678\n"+
			"F0.DF2E=91\n";
	
	byte[] realMessage=new byte[]{(byte)0x0A,(byte)0x04,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,
			(byte)0xF0,(byte)0x82,(byte)0x01,(byte)0x3B,
			(byte)0xE1,(byte)0x0D,(byte)0xD0,(byte)0x02,(byte)0x63,(byte)0x74,(byte)0xD1,(byte)0x01,
			(byte)0x71,(byte)0xD3,(byte)0x04,(byte)0x02,(byte)0x20,(byte)0xF3,(byte)0xE8,(byte)0xE2,
			(byte)0x82,(byte)0x01,(byte)0x0E,(byte)0xF1,(byte)0x0B,(byte)0x9F,(byte)0x1C,(byte)0x08,
			(byte)0x33,(byte)0x31,(byte)0x33,(byte)0x39,(byte)0x30,(byte)0x39,(byte)0x35,(byte)0x39,
			(byte)0xF5,(byte)0x7C,(byte)0xDF,(byte)0x1E,(byte)0x04,(byte)0x00,(byte)0x00,(byte)0x07,
			(byte)0x86,(byte)0xDF,(byte)0x20,(byte)0x01,(byte)0x01,(byte)0xDF,(byte)0x21,(byte)0x02,
			(byte)0x88,(byte)0x10,(byte)0x5F,(byte)0x2A,(byte)0x02,(byte)0x09,(byte)0x78,(byte)0xDF,
			(byte)0x50,(byte)0x06,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x05,(byte)0x00,
			(byte)0xEA,(byte)0x10,(byte)0xEF,(byte)0x0E,(byte)0xDF,(byte)0x23,(byte)0x02,(byte)0x00,
			(byte)0x01,(byte)0xDF,(byte)0x24,(byte)0x06,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,
			(byte)0x05,(byte)0x00,(byte)0x89,(byte)0x06,(byte)0x31,(byte)0x32,(byte)0x33,(byte)0x34,
			(byte)0x35,(byte)0x36,(byte)0xDF,(byte)0x27,(byte)0x07,(byte)0x20,(byte)0x16,(byte)0x12,
			(byte)0x05,(byte)0x16,(byte)0x16,(byte)0x09,(byte)0xEB,(byte)0x2E,(byte)0x57,(byte)0x13,
			(byte)0x60,(byte)0x60,(byte)0x77,(byte)0x38,(byte)0x27,(byte)0x52,(byte)0x56,(byte)0x07,
			(byte)0xD2,(byte)0x01,(byte)0x16,(byte)0x02,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,
			(byte)0x00,(byte)0x00,(byte)0x0F,(byte)0x5A,(byte)0x08,(byte)0x60,(byte)0x60,(byte)0x77,
			(byte)0x38,(byte)0x27,(byte)0x52,(byte)0x56,(byte)0x07,(byte)0x5F,(byte)0x34,(byte)0x01,
			(byte)0x01,(byte)0x5F,(byte)0x24,(byte)0x03,(byte)0x20,(byte)0x11,(byte)0x30,(byte)0x5F,
			(byte)0x30,(byte)0x02,(byte)0x06,(byte)0x02,(byte)0xDF,(byte)0x2E,(byte)0x02,(byte)0x00,
			(byte)0x00,(byte)0xDF,(byte)0x2F,(byte)0x02,(byte)0x00,(byte)0x00,(byte)0xF7,(byte)0x4F,
			(byte)0x84,(byte)0x06,(byte)0xA0,(byte)0x00,(byte)0x00,(byte)0x02,(byte)0x66,(byte)0x01,
			(byte)0x82,(byte)0x02,(byte)0x18,(byte)0x00,(byte)0x9F,(byte)0x02,(byte)0x06,(byte)0x00,
			(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x05,(byte)0x00,(byte)0x95,(byte)0x05,(byte)0x80,
			(byte)0x00,(byte)0x00,(byte)0x80,(byte)0x00,(byte)0x9A,(byte)0x03,(byte)0x16,(byte)0x12,
			(byte)0x05,(byte)0x9C,(byte)0x01,(byte)0x00,(byte)0x9F,(byte)0x36,(byte)0x02,(byte)0x00,
			(byte)0x13,(byte)0x9F,(byte)0x37,(byte)0x04,(byte)0xA0,(byte)0xAB,(byte)0xB3,(byte)0x1B,
			(byte)0x9F,(byte)0x26,(byte)0x08,(byte)0x7B,(byte)0xB1,(byte)0xD1,(byte)0x51,(byte)0x22,
			(byte)0xD6,(byte)0x9A,(byte)0x9F,(byte)0x9F,(byte)0x27,(byte)0x01,(byte)0x80,(byte)0x9F,
			(byte)0x10,(byte)0x07,(byte)0x06,(byte)0x01,(byte)0x0A,(byte)0x03,(byte)0xA4,(byte)0x00,
			(byte)0x00,(byte)0x9F,(byte)0x34,(byte)0x03,(byte)0x01,(byte)0x03,(byte)0x02,(byte)0xFA,
			(byte)0x0E,(byte)0xDF,(byte)0x68,(byte)0x04,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x01,
			(byte)0xDF,(byte)0x6B,(byte)0x04,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x1C,(byte)0xFB,
			(byte)0x20,(byte)0xEF,(byte)0x1E,(byte)0xDF,(byte)0x5F,(byte)0x02,(byte)0x30,(byte)0x03,
			(byte)0xDF,(byte)0x7F,(byte)0x04,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x1C,(byte)0x9F,
			(byte)0x16,(byte)0x0F,(byte)0x31,(byte)0x32,(byte)0x33,(byte)0x34,(byte)0x35,(byte)0x36,
			(byte)0x37,(byte)0x38,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,
			(byte)0x00,(byte)0xE3,(byte)0x18,(byte)0xDF,(byte)0x81,(byte)0x53,(byte)0x14,(byte)0xE3,
			(byte)0x6E,(byte)0x66,(byte)0xEA,(byte)0x47,(byte)0xEA,(byte)0xD2,(byte)0xAA,(byte)0x2B,
			(byte)0xCC,(byte)0x81,(byte)0x2F,(byte)0x5A,(byte)0x4E,(byte)0x10,(byte)0xD7,(byte)0xED,
			(byte)0x84,(byte)0x1E,(byte)0x93};
	
	@Test
	public void testParse() {
		CtapParser p=new CtapParser();
		try
		{
			Message m=p.parse(validMessage);
			System.out.println(m.dump());
			if(!validParsedMessage.equals(m.dump()))
				fail("dump of message does not match expectation");
			
			m=p.parse(realMessage);
			System.out.println(m.dump());
		}
		catch(ParserException e)
		{
			fail(e.getMessage());
		}
		
	}

}
